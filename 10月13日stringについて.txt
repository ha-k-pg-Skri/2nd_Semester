std::string　   str =　　"文字列"
型名＝＞クラス　変数名　　文字


c言語の関数でstring型に入力されている文字列を使うには
.c_str()という関数で、文字列のポインタを受け取る必要がある

C++的な書き方(iostreamとstringのインクルードが必要)

文字の検索 .find() 関数がある


vectorを使うと楽

string
vector   =>コンテナ型　

同じ規格のものがそろっているから

型をもって１つの要素を楽に処理できる

map list que...etc コンテナ型いっぱいある 　

基本的に同じような使い方

std:::vector<型>::iterator
int型のvectorクラスのiterator型
　　　型名

itr =v1.begin();
      ↑要素の先頭を指すイテレーター

v1.end() のendはv1の要素の1個先の何もないとこを指す
NULLポインターのようなもの

begin()に　++すると1個ずつずれendにつく

イテレータ－をfor文で使うときはインクリメントを前に置く
for(int =0; i<  ; ++itr)

Qなぜ、前置なのか？

